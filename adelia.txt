{"users":[{"id":"0","lastpost":0,"blacklist":"0"}]}
////////////////
<?php
include "config.php";
date_default_timezone_set($setting_time_zone);
if (isset($_POST['adminpass'])){
$password = $_POST['adminpass'];
} else {
	die("<div class=post><h1>No password was set.</h1></div>");
}

If ($password != $setting_admin_pass) {
	die("<div class=post><h1>Wrong password. Go away.</h1></div>");
}

if (isset($_POST['action'])){
	$action = $_POST['action'];
	if (isset($_POST['text'])){
		$text = $_POST['text'];
	} else {
		die("<div class=post><h1>Text isn't set.</h1></div>");
	}
} else {
	$action = 'view';
	print "<div class=post><h1>Warning:</h1>No action was chosen previously, or you've only opened this page.</div>";
}
if ($action == 'delpost'){
	$board_json = file_get_contents("el.json");
	$board_list = json_decode($board_json, true);
	$board_id_list = array_column($board_list['posts'], 'id');
	$post_place = array_search($text, $board_id_list); 
	$board_list['posts'][$post_place]['text'] = $setting_deleted_msg;
	$new_board_json = json_encode($board_list, true);
	file_put_contents("el.json", $new_board_json);
	die("<div class=post><h1>Deleted post #$text</h1>");
}

if ($action == 'reveal'){
	$decrypt_ip = openssl_decrypt($text, $crypt_cipher, $setting_admin_key, $crypt_options, $crypt_iv);
	die("<div class=post><h1>IP reveal</h1>User ID <b>$text</b> has IP <b>$decrypt_ip</b></div>");
}
print "<form action='admin.php' method='post'>"; 
print "<div class='post'><b>Delete post</b><br><input type='radio' name='action' value='delpost'><br> Input Post ID below</div>"; 
print "<div class='post'><b>Input: </b><input type='text' name='text' maxlength='64'><br><b>Admin pass:</b><br><input required type='password' name='adminpass' maxlength='32'><br><input type='submit' value='Submit'></div>";

?>
</html>
////////////////////
<html><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<style>
body {width: 56rem; max-width: 96%; margin: auto; background: #eef2ff; color: #000; font-family: arial,helvetica,sans-serif; font-size: 0.9em;}
h1 {color: #af0a0f; margin-bottom: 0.1em;}
hr {border: 1px solid #b7c5d9;}
a {color: #34345c; text-decoration: underline;}
a:hover { color: #fb4934; text-decoration: bold; }
.newpost table, th, td { background: #98e; border: 1px #000 solid; padding: 2px; text-align: left; font-weight: bold;}
div.post {background-color: #d6daf0; padding: 0.25em 1em 0.25em 1em; margin-top: 0.25em; margin-bottom: 0.25em; border: 1px solid #b7c5d9;}
.deleted { text-align: left; color: #800000; font-size: 12pt; font-weight: bold;}
.info { color: #0f0c5d; font-size: 12pt; }
.poster { padding: 0 5px; border-radius: 3px; text-shadow: 2px 2px #000000; color:#FFFFFF}
</style></head>
<?php
$setting_board_name = '2am';			# Name of this textboard
$setting_board_title = "<h1> Testing Board</h1>";	# In-line HTML that shows on top of the board
$setting_admin_pass = 'a333';	 		# Admin pass (CHANGE THIS)
$setting_admin_key = 'ff5g95jg95nt5dw';			# Encryption key for sensitive data (CHANGE THIS)
$setting_time_zone = 'America/New_York';	# Time zone
$setting_board_flow = '1';					# 0 = Oldest posts on top, read top to bottom - 1 = Newest posts on top, read bottom to top
$setting_usercodes = '0'; 					# Allow users to register their names per IP address
$setting_maxchar = '2000';					# Maximum post length permitted
$setting_minchar = '1';					# Minimum post length permitted
$setting_post_wait = '6';					# Seconds a poster must wait before posting again
$setting_wrong_penalty = '6';				# Seconds a poster must wait after getting math wrong
$setting_deleted_msg = "<span class=deleted>THIS POST WAS DELETED.</span>";
$setting_static_div = "cag"; 				# Name of the CSS div for static content (never moves or changes)
$setting_footer_content = "</div><br><br><br><a href='./'>[Home]</a> <br><br><br>";
?>
///////////////////////////////////////////
{"posts":[{"id":0,"user":"0","name":"2am","verified":"0","time":"1653512771","text":"\u003Cspan class=deleted\u003E2am.\u003C\/span\u003E"}],"id":0}
/////////////////


<?php
include "config.php";
date_default_timezone_set($setting_time_zone);
 print '<h1><a href="./">[Home]</a></h1>';
 if (isset($_POST['mode'])){
	$mode = $_POST['mode'];
} else {
	$mode = 'view';
}
$math1 = rand(1,2);
$math2 = rand(1,2);
$mtype = rand(0,1);
if ($mtype == 0) {
	$mtype = '+';
} elseif ($mtype == 1) {
	$mtype = '-';
}	
if ($mode == 'post'){
	$text = $_POST['text'];
	$name = $_POST['name'];
	$text = strip_tags($text);

    $user_json = file_get_contents("ad.json");
	$user_list = json_decode($user_json, true);
	$user_id_list = array_column($user_list['users'], 'id');
	$user_id = '8888888888' ; 
    if (in_array($user_id, $user_id_list)){
		$user_place = array_search($user_id, $user_id_list); 
		if ($user_list['users'][$user_place]['blacklist'] == "1"){
			die("<div class='post'><h1>You're banned!</h1>You're not allowed to create new posts!</div>");
			}}
    if (preg_match('/^(.)\1*$/u ', $text)) {
		die ("<div class='post'><h1>Spam detected!</h1>Try posting something that's not spam.</div>");
	} $post_length = strlen($text);
	if ($post_length < $setting_minchar) {
		die ("<div class='post'><h1>Post too short!</h1>You wrote <b>$post_length characters</b>. The minimum is <b>$setting_minchar characters</b>.</div>");
	} if ($post_length > $setting_maxchar) {
		die ("<div class='post'><h1>Post too long!</h1>You wrote <b>$post_length characters</b>. The minimum is <b>$setting_maxchar characters</b>.</div>");
	}
if (substr_count($text, ' ') === strlen($text)) {
		die ("<div class='post'><h1>Spam detected!</h1>Post contained only spaces!</div>");
	}	
$spam_time = time() + $setting_post_wait;
if (in_array($user_id, $user_id_list)){
$user_wait = $user_list['users'][$user_place]['lastpost'] - time();
if ($user_list['users'][$user_place]['lastpost'] > time()){
die("<div class='post'><h1>Spam timer</h1>Wait $user_wait seconds before posting!</div>");
		}
	}
if ($setting_usercodes == 1){
		if (isset($_POST['trip']) && $_POST['trip'] == 1){
			$name_verify = substr(sha1($user_id), 0, 8);
		}
	}

	if (!isset($name_verify)){
		$name_verify = 0;
	}
	$math1 = $_POST['math1'];
	$math2 = $_POST['math2'];
	$mtype = $_POST['mtype'];
	$manswer = $_POST['manswer'];
    if ($mtype == '+') {
		$answer = $math1 + $math2;
	} elseif ($mtype == '-') {
		$answer = $math1 - $math2;
	}

	if ($manswer <> $answer) {
	 $spam_time = time() + $setting_wrong_penalty;
		
	}
        if (in_array($user_id, $user_id_list)){
		$user_list['users'][$user_place]['lastpost'] = $spam_time; 
		$new_user_json = json_encode($user_list, true);
		file_put_contents("ad.json", $new_user_json);
	} else {
		$new_user = array("id" => "$user_id", "lastpost" => $spam_time, "blacklist" => 0);
		array_push($user_list['users'], $new_user);
		$new_user_json = json_encode($user_list, true);
		file_put_contents("ad.json", $new_user_json);
	}

	if ($manswer <> $answer) {
		die("<div class='post'><h1>Spam timer</h1><div class='post'>Your answer to the math question was incorrect!<br>Because of this... you must wait $setting_wrong_penalty seconds.</h1></div>");
		
	}
	
	if(isset($_POST['name']) && isset($_POST['text'])) {
		$board_json = file_get_contents("el.json");
		$board_list = json_decode($board_json, true);
		$board_list['id'] = $board_list['id'] + 1;
		$new_post = array("id" => $board_list['id'], "user" => "$user_id", "name" => "$name", "verified" => "$name_verify", "time" => time(), "text" => "$text");
		array_push($board_list['posts'], $new_post);
		$new_board_json = json_encode($board_list, true);
		file_put_contents("el.json", $new_board_json);
		echo "<div class='post'><h1>Post completed!</h1><a href='index.php'>Back</a></div>";
	}
}

If ($mode == 'view'){print "<title>$setting_board_name</title><center><div class=main>";
	$mode = 0;
	print "<center><br><br><form action='index.php' method='post'><table class='newpost'>
	<tr><td>Title</td><td><input required type='text' name='name' maxlength='64' value='Anonymous'></td></tr>
	<tr><td><input type='submit' value='Send'></td><td><textarea rows='4' cols='44' name='text' maxlength='$setting_maxchar' required placeholder='Message'></textarea></td></tr>";
	print "<tr><td>Math</td><td><input required type='hidden' name='math1' maxlength='32' value='$math1'><input required  type='hidden' name='math2' maxlength='32' value='$math2'><input required type='hidden' name='mtype' maxlength='32' value='$mtype'><input required type='hidden' name='mode' maxlength='4' value='post'>";
    print "$math1 $mtype $math2" . ' <input type="text" required  name="manswer" maxlength=4 placeholder="Answer"></td></form></table></center>' . "\n \n";
     print "$setting_board_title";
	 print "<br>";
	 print "<hr>";
	 print "<hr>";
	 print "<br>";
	$board_json = file_get_contents("el.json");
	$board_posts = json_decode($board_json, true);
	if ($setting_board_flow == '1'){
		$board_posts['posts'] = array_reverse($board_posts['posts']);
	}
	$total_posts = count($board_posts['posts']);
$post_limit = 10;
if(isset($_GET['m'])) {
		$post_limit = $_GET['m'];
		if ($post_limit > 500) {
			die("<div class='post'><h1>Notice!</h1><div class='post'>Posts not shown are still archived!</div>");
		}
	}

$display_posts = array_slice($board_posts['posts'], 0, $post_limit);	
foreach ($display_posts as $display_post){
$post_id = $display_post['id'];
		$post_name = $display_post['name'];
		$post_text = $display_post['text'];
		$post_verify = $display_post['verified'];
		if($post_verify == "0"){
			$name_splash = '';
		} else {
			$verify_bg_color = substr($post_verify, 0, 6);
			$name_splash = "<span class=poster style='background-color:#$verify_bg_color;'>$post_verify</span>";
		}
		echo "<div class='post'><span class=info>#$post_id <b>$post_name</b> $name_splash : </span><br>$post_text</div> \n \n";
		echo "<br>";
	}
    print "<div class=$setting_static_div>$total_posts posts total<br><b>Amount of posts to display</b><br><a href='index.php'>10</a> - <a href='index.php?m=25'>25</a> - <a href='index.php?m=50'>50</a> - <a href='index.php?m=100'>100</a> - <a href='index.php?m=250'>250</a> - <a href='index.php?m=500'>500</a></div>";
	print "</div><footer>$setting_footer_content";
}

?>
</footer>
</html>
///////////////////////////
<?php
echo "<form action='admin.php' method='post'>
<input required type='password' name='adminpass' maxlength='32'><input type='submit' value='Admin'> 
</form>";
?>
















































